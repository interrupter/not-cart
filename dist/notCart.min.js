var notCart=function(){"use strict";return class{constructor(t){this.options=t,this.init()}init(){this.content=[],this.error=this.reportError.bind(this),this.load()}reportError(t){console.error(t)}isLocal(){return!!this.options.local}load(){this.isLocal()?this.loadFromLocalStorage():this.loadFromServer()}loadFromLocalStorage(){if(!window.localStorage)throw new Error("Local Storage API is absent!");this.content=[];try{let t=window.localStorage.getItem("cart"),r=JSON.parse(t);this.content=r}catch(t){this.error(t)}}loadFromServer(){}save(){this.isLocal()?this.saveToLocalStorage():this.saveToServer()}saveToLocalStorage(){if(!window.localStorage)throw new Error("Local Storage API is absent!");try{let t=JSON.stringify(this.content);window.localStorage.setItem("cart",t)}catch(t){this.error(t)}}saveToServer(){this.postData(this.getSaveURL(),this.content).then(t=>{this.showSaveResponse(t)}).catch(this.error)}add(t){this.isLocal()?(this.content.push(t),this.save()):this.addToServer(t).then(this.loadFromServer.bind(this)).catch(this.error)}update(t,r,e){if(!Array.isArray(this.content))throw new Error("Cart content is not valid!");{let o=this.content.filter(e=>e[t]===r);if(o&&o.length){let t=o[0];for(let r in e)t[r]=e[r],t.edited=!0;this.save()}}}remove(t){this.content.indexOf(t)>-1&&(this.content.splice(this.content.indexOf(t),1),this.save())}find(){}list(){}clear(){}renderButton(){}renderDropMenu(){}renderPage(){}async postData(t="",r={}){const e=await fetch(t,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(r)});return await e.json()}getSaveURL(){return this.options.saveUrl?this.options.saveUrl:"/api/cart/save"}getOrderURL(){return this.options.orderUrl?this.options.orderUrl:"/api/cart/order"}}}();
